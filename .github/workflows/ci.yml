name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  frontend:
    name: Frontend checks
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Install dependencies
        working-directory: ./app
        run: pnpm install
      - name: Format (biome)
        working-directory: ./app
        run: pnpm run format:check || pnpm run format
      - name: Lint (biome)
        working-directory: ./app
        run: pnpm run lint
      - name: Type check
        working-directory: ./app
        run: pnpm run type-check || pnpm tsc --noEmit
      - name: Run frontend tests
        working-directory: ./app
        run: pnpm run test -- --reporter=dot
      - name: Build
        working-directory: ./app
        run: pnpm run build

  backend:
    name: Backend checks
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install dependencies
        working-directory: ./api
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .[dev]
      - name: Ruff format
        working-directory: ./api
        run: ruff format --check . || ruff format .
      - name: Ruff lint
        working-directory: ./api
        run: ruff check .
      - name: Pyright (type check)
        working-directory: ./api
        run: pyright --project . || true
      - name: Run backend tests
        working-directory: ./api
        run: python -m pytest -q
name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  frontend:
    name: Frontend (pnpm)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Install dependencies (app)
        working-directory: ./app
        run: pnpm install --frozen-lockfile
      - name: Build (app)
        working-directory: ./app
        run: pnpm run build
      - name: Lint (app)
        working-directory: ./app
        run: pnpm run lint || true

  backend:
    name: Backend (Python)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies (api)
        working-directory: ./api
        run: |
          python -m venv .venv
          . .venv/bin/activate
          pip install -e .[dev]
      - name: Lint (api)
        working-directory: ./api
        run: |
          . .venv/bin/activate
          ruff check . || true
      - name: Type Check (api)
        working-directory: ./api
        run: |
          . .venv/bin/activate
          pyright || true
